{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","_useState","useState","_useState2","_slicedToArray","selectedGood","setGood","isSelectedGood","good","_jsxs","className","children","_jsx","_Fragment","concat","type","cn","hidden","onClick","map","handleGoodClick","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAAC,EAAgCC,mBAAS,OAAMC,EAAAC,YAAAH,EAAA,GAAxCI,EAAYF,EAAA,GAAEG,EAAOH,EAAA,GAEtBI,EAAiB,SAAAC,GAAI,OAAIA,IAASH,GAUxC,OACEI,eAAA,QAAMC,UAAU,oBAAmBC,SAAA,CACjCC,cAAA,MAAIF,UAAU,sCAAqCC,SAChDN,EACCI,eAAAI,WAAA,CAAAF,SAAA,IAAAG,OACMT,EAAY,gBAChBO,cAAA,UACE,UAAQ,cACRG,KAAK,SACLL,UAAWM,IAAG,cAAe,CAAEC,QAASZ,IACxCa,QAAS,kBAAMZ,EAAQ,UAI3B,sBAIJM,cAAA,SAAOF,UAAU,QAAOC,SACtBC,cAAA,SAAAD,SACGZ,EAAMoB,KAAI,SAAAX,GAAI,OACbC,eAAA,MAEE,UAAQ,OACRC,UACEM,IAAG,CAAE,+BAAgCT,EAAeC,KACnDG,SAAA,CAEHC,cAAA,MAAAD,SACEC,cAAA,UACE,UAASL,EAAeC,GAAQ,eAAiB,YACjDO,KAAK,SACLL,UAAWM,IAAG,SAAU,CAAE,UAAWT,EAAeC,KACpDU,QAAS,kBAzCD,SAACV,GACnBD,EAAeC,GACjBF,EAAQ,IAERA,EAAQE,GAqCmBY,CAAgBZ,IAAMG,SAEpCJ,EAAeC,GAAQ,IAAM,QAIlCI,cAAA,MAAI,UAAQ,YAAYF,UAAU,eAAcC,SAC7CH,MAlBEA,cClDnBa,IAASC,OACPV,cAACZ,EAAG,IACJuB,SAASC,eAAe,W","file":"static/js/main.76db8ae1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setGood] = useState('Jam');\n\n  const isSelectedGood = good => good === selectedGood;\n\n  const handleGoodClick = (good) => {\n    if (isSelectedGood(good)) {\n      setGood('');\n    } else {\n      setGood(good);\n    }\n  };\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood ? (\n          <>\n            {`${selectedGood} is selected`}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className={cn('delete ml-3', { hidden: !selectedGood })}\n              onClick={() => setGood('')}\n            />\n          </>\n        ) : (\n          'No goods selected'\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => (\n            <tr\n              key={good}\n              data-cy=\"Good\"\n              className={\n                cn({ 'has-background-success-light': isSelectedGood(good) })\n                }\n            >\n              <td>\n                <button\n                  data-cy={isSelectedGood(good) ? 'RemoveButton' : 'AddButton'}\n                  type=\"button\"\n                  className={cn('button', { 'is-info': isSelectedGood(good) })}\n                  onClick={() => handleGoodClick(good)}\n                >\n                  {isSelectedGood(good) ? '-' : '+'}\n                </button>\n              </td>\n\n              <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                {good}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}